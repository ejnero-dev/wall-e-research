#!/bin/bash

# Script para iniciar el dashboard completo Wall-E Research
# Backend API + Frontend UI

echo "ü§ñ Iniciando Wall-E Research Dashboard..."
echo "========================================="

# Verificar dependencias
echo "üìã Verificando dependencias..."

# Verificar Python y dependencias del backend
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 no est√° instalado"
    exit 1
fi

if [ ! -f "requirements.txt" ]; then
    echo "‚ùå requirements.txt no encontrado"
    exit 1
fi

# Verificar Node.js y dependencias del frontend
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm no est√° instalado"
    exit 1
fi

if [ ! -d "frontend/node_modules" ]; then
    echo "‚ö†Ô∏è  Dependencias del frontend no instaladas. Ejecutando npm install..."
    cd frontend && npm install && cd ..
fi

echo "‚úÖ Dependencias verificadas"

# Funci√≥n para limpiar procesos al salir
cleanup() {
    echo ""
    echo "üõë Deteniendo servicios..."
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null
        echo "‚úÖ Backend detenido"
    fi
    if [ ! -z "$FRONTEND_PID" ]; then
        kill $FRONTEND_PID 2>/dev/null
        echo "‚úÖ Frontend detenido"
    fi
    echo "üëã Dashboard detenido"
    exit 0
}

# Configurar trap para cleanup
trap cleanup SIGINT SIGTERM

# Iniciar Backend API
echo ""
echo "üöÄ Iniciando Backend API (puerto 8000)..."
uv run python -m uvicorn src.api.dashboard_server:app --reload --host 0.0.0.0 --port 8000 &
BACKEND_PID=$!

# Esperar a que el backend se inicie
echo "‚è≥ Esperando a que el backend se inicie..."
sleep 3

# Verificar que el backend est√° corriendo
if ! curl -s http://localhost:8000/health > /dev/null; then
    echo "‚ö†Ô∏è  Backend tardando en iniciarse, continuando..."
fi

# Iniciar Frontend UI
echo ""
echo "üé® Iniciando Frontend UI (puerto 8080)..."
cd frontend
npm run dev &
FRONTEND_PID=$!
cd ..

echo ""
echo "‚úÖ Dashboard iniciado exitosamente!"
echo ""
echo "üåê URLs disponibles:"
echo "   ‚Ä¢ Frontend UI:  http://localhost:8080"
echo "   ‚Ä¢ Backend API:  http://localhost:8000"
echo "   ‚Ä¢ API Docs:     http://localhost:8000/docs"
echo "   ‚Ä¢ Health Check: http://localhost:8000/api/dashboard/health"
echo ""
echo "üìä Funcionalidades disponibles:"
echo "   ‚Ä¢ M√©tricas en tiempo real (WebSocket)"
echo "   ‚Ä¢ Gesti√≥n de productos Wallapop"
echo "   ‚Ä¢ Auto-detecci√≥n de productos"
echo "   ‚Ä¢ Respuestas autom√°ticas configurables"
echo "   ‚Ä¢ Monitoreo de scrapers"
echo ""
echo "üõë Presiona Ctrl+C para detener el dashboard"
echo ""

# Esperar indefinidamente (los procesos siguen en background)
wait $FRONTEND_PID