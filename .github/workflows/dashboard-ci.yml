name: 🎨 Dashboard CI/CD

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'src/api/**'
      - 'src/auto_detection/**'
      - '.github/workflows/**'
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'src/api/**'
      - 'src/auto_detection/**'

jobs:
  # Frontend Testing
  frontend-test:
    name: 🎨 Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔍 Lint check
      run: npm run lint
      
    - name: 🏗️ Build frontend
      run: npm run build
      
    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: frontend/dist

  # Backend Testing  
  backend-test:
    name: 🐍 Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Setup uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: 📥 Install dependencies
      run: uv sync --extra dev
      
    - name: 🧪 Run API tests
      run: uv run pytest tests/unit/test_dashboard_api.py -v
      
    - name: 🔍 Lint backend code
      run: uv run ruff check src/api/ src/auto_detection/ --fix
      
    - name: 🔧 Test dashboard server startup
      run: |
        timeout 10s uv run python -m uvicorn src.api.dashboard_server:app --host 127.0.0.1 --port 8001 || true
        
  # Integration Testing
  integration-test:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Setup uv
      uses: astral-sh/setup-uv@v3
      
    - name: 📥 Install Python dependencies
      run: uv sync --extra dev
      
    - name: 📥 Install Node dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🚀 Start backend server
      run: |
        uv run python -m uvicorn src.api.dashboard_server:app --host 127.0.0.1 --port 8001 &
        sleep 5
        
    - name: 🏗️ Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: 🧪 Test API endpoints
      run: |
        curl -f http://127.0.0.1:8001/ || exit 1
        curl -f http://127.0.0.1:8001/api/dashboard/health || exit 1
        
    - name: 📊 API Response Test
      run: |
        response=$(curl -s http://127.0.0.1:8001/api/dashboard/health)
        echo "Health check response: $response"
        
  # Security Scan
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📊 Upload security scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Deployment Ready Check
  deployment-check:
    name: 🚀 Deployment Ready
    runs-on: ubuntu-latest
    needs: [integration-test, security-scan]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: ✅ All checks passed
      run: |
        echo "🎉 Dashboard is ready for deployment!"
        echo "✅ Frontend builds successfully"
        echo "✅ Backend tests pass"
        echo "✅ Integration tests pass"
        echo "✅ Security scan clean"
        echo ""
        echo "🚀 Ready to merge and deploy!"